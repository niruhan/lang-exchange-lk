{"ast":null,"code":"import _slicedToArray from \"/Users/niruhan/MSc/source_code/lang-exchange-lk/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useStore } from 'store';\nimport { SET_MESSAGE } from 'store/message';\nimport { MessageType } from 'constants/MessageType';\n/**\n * React hook for dispatching global messages\n */\n\nexport var useGlobalMessage = function useGlobalMessage() {\n  var _useStore = useStore(),\n      _useStore2 = _slicedToArray(_useStore, 2),\n      dispatch = _useStore2[1];\n\n  var dispatchAction = function dispatchAction(text, messageType, autoClose) {\n    dispatch({\n      type: SET_MESSAGE,\n      payload: {\n        type: messageType,\n        text: text,\n        autoClose: autoClose\n      }\n    });\n  };\n\n  var success = function success(text, autoClose) {\n    return dispatchAction(text, MessageType.SUCCESS, autoClose);\n  };\n\n  var info = function info(text, autoClose) {\n    return dispatchAction(text, MessageType.INFO, autoClose);\n  };\n\n  var warning = function warning(text, autoClose) {\n    return dispatchAction(text, MessageType.WARNING, autoClose);\n  };\n\n  var error = function error(text, autoClose) {\n    return dispatchAction(text, MessageType.ERROR, autoClose);\n  };\n\n  return {\n    success: success,\n    info: info,\n    warning: warning,\n    error: error\n  };\n};","map":{"version":3,"sources":["/Users/niruhan/MSc/source_code/lang-exchange-lk/frontend/src/hooks/useGlobalMessage.js"],"names":["useStore","SET_MESSAGE","MessageType","useGlobalMessage","dispatch","dispatchAction","text","messageType","autoClose","type","payload","success","SUCCESS","info","INFO","warning","WARNING","error","ERROR"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,WAAT,QAA4B,uBAA5B;AAEA;;;;AAGA,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAAA,kBACfH,QAAQ,EADO;AAAA;AAAA,MAC3BI,QAD2B;;AAGpC,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD,EAAOC,WAAP,EAAoBC,SAApB,EAAkC;AACvDJ,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAER,WADC;AAEPS,MAAAA,OAAO,EAAE;AACPD,QAAAA,IAAI,EAAEF,WADC;AAEPD,QAAAA,IAAI,EAAEA,IAFC;AAGPE,QAAAA,SAAS,EAATA;AAHO;AAFF,KAAD,CAAR;AAQD,GATD;;AAWA,MAAMG,OAAO,GAAG,SAAVA,OAAU,CAACL,IAAD,EAAOE,SAAP;AAAA,WACdH,cAAc,CAACC,IAAD,EAAOJ,WAAW,CAACU,OAAnB,EAA4BJ,SAA5B,CADA;AAAA,GAAhB;;AAGA,MAAMK,IAAI,GAAG,SAAPA,IAAO,CAACP,IAAD,EAAOE,SAAP;AAAA,WACXH,cAAc,CAACC,IAAD,EAAOJ,WAAW,CAACY,IAAnB,EAAyBN,SAAzB,CADH;AAAA,GAAb;;AAGA,MAAMO,OAAO,GAAG,SAAVA,OAAU,CAACT,IAAD,EAAOE,SAAP;AAAA,WACdH,cAAc,CAACC,IAAD,EAAOJ,WAAW,CAACc,OAAnB,EAA4BR,SAA5B,CADA;AAAA,GAAhB;;AAGA,MAAMS,KAAK,GAAG,SAARA,KAAQ,CAACX,IAAD,EAAOE,SAAP;AAAA,WACZH,cAAc,CAACC,IAAD,EAAOJ,WAAW,CAACgB,KAAnB,EAA0BV,SAA1B,CADF;AAAA,GAAd;;AAGA,SAAO;AAAEG,IAAAA,OAAO,EAAPA,OAAF;AAAWE,IAAAA,IAAI,EAAJA,IAAX;AAAiBE,IAAAA,OAAO,EAAPA,OAAjB;AAA0BE,IAAAA,KAAK,EAALA;AAA1B,GAAP;AACD,CA3BM","sourcesContent":["import { useStore } from 'store';\nimport { SET_MESSAGE } from 'store/message';\nimport { MessageType } from 'constants/MessageType';\n\n/**\n * React hook for dispatching global messages\n */\nexport const useGlobalMessage = () => {\n  const [, dispatch] = useStore();\n\n  const dispatchAction = (text, messageType, autoClose) => {\n    dispatch({\n      type: SET_MESSAGE,\n      payload: {\n        type: messageType,\n        text: text,\n        autoClose,\n      },\n    });\n  };\n\n  const success = (text, autoClose) =>\n    dispatchAction(text, MessageType.SUCCESS, autoClose);\n\n  const info = (text, autoClose) =>\n    dispatchAction(text, MessageType.INFO, autoClose);\n\n  const warning = (text, autoClose) =>\n    dispatchAction(text, MessageType.WARNING, autoClose);\n\n  const error = (text, autoClose) =>\n    dispatchAction(text, MessageType.ERROR, autoClose);\n\n  return { success, info, warning, error };\n};\n"]},"metadata":{},"sourceType":"module"}