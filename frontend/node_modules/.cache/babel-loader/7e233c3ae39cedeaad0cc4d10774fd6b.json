{"ast":null,"code":"import _regeneratorRuntime from \"/Users/niruhan/MSc/source_code/lang-exchange-lk/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/niruhan/MSc/source_code/lang-exchange-lk/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/niruhan/MSc/source_code/lang-exchange-lk/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/niruhan/MSc/source_code/lang-exchange-lk/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _taggedTemplateLiteral from \"/Users/niruhan/MSc/source_code/lang-exchange-lk/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/niruhan/MSc/source_code/lang-exchange-lk/frontend/src/components/Search/Search.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  top: 14px;\\n  right: 16px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useApolloClient } from '@apollo/react-hooks';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Loading } from 'components/Loading';\nimport SearchInput from './SearchInput';\nimport SearchResult from './SearchResult';\nimport { useClickOutside } from 'hooks/useClickOutside';\nimport { useDebounce } from 'hooks/useDebounce';\nimport { SEARCH_USERS } from 'graphql/user';\nvar StyledLoading = styled(Loading)(_templateObject());\n/**\n * Renders search input\n */\n\nvar Search = function Search(_ref) {\n  var location = _ref.location,\n      hideIcon = _ref.hideIcon,\n      forMessage = _ref.forMessage,\n      backgroundColor = _ref.backgroundColor,\n      placeholder = _ref.placeholder,\n      autoFocus = _ref.autoFocus,\n      others = _objectWithoutProperties(_ref, [\"location\", \"hideIcon\", \"forMessage\", \"backgroundColor\", \"placeholder\", \"autoFocus\"]);\n\n  var client = useApolloClient();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpenSearchResult = _useState2[0],\n      setIsOpenSearchResult = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      searchQuery = _useState4[0],\n      setSearchQuery = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      users = _useState6[0],\n      setUsers = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loading = _useState8[0],\n      setLoading = _useState8[1]; // Close search result on click outside\n\n\n  var inputRef = useRef(null);\n  useClickOutside(inputRef, function () {\n    return setIsOpenSearchResult(false);\n  }); // Debounce search query value\n\n  var debounceSearchQuery = useDebounce(searchQuery, 500);\n  useEffect(function () {\n    // Clear search input value, after location change\n    setSearchQuery('');\n  }, [location.pathname]);\n  useEffect(function () {\n    var search =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _ref3, data, openSearchResult;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return client.query({\n                  query: SEARCH_USERS,\n                  variables: {\n                    searchQuery: debounceSearchQuery\n                  }\n                });\n\n              case 2:\n                _ref3 = _context.sent;\n                data = _ref3.data;\n                setUsers(data.searchUsers);\n                setLoading(false);\n                openSearchResult = debounceSearchQuery !== '';\n                setIsOpenSearchResult(openSearchResult);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function search() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    debounceSearchQuery ? search() : setIsOpenSearchResult(false);\n    return function () {\n      return setLoading(false);\n    };\n  }, [debounceSearchQuery, client]);\n\n  var handleInputChange =\n  /*#__PURE__*/\n  function () {\n    var _ref4 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(e) {\n      var value;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              // Trim white space only from beginning\n              value = e.target.value.replace(/^\\s+/g, '');\n              setSearchQuery(value);\n\n              if (value) {\n                setLoading(true);\n              }\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleInputChange(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var handleInputFocus = function handleInputFocus() {\n    return searchQuery && setIsOpenSearchResult(true);\n  };\n\n  return React.createElement(SearchInput, Object.assign({\n    onChange: handleInputChange,\n    onFocus: handleInputFocus,\n    value: searchQuery,\n    inputRef: inputRef,\n    placeholder: placeholder,\n    hideIcon: hideIcon,\n    backgroundColor: backgroundColor,\n    autoFocus: autoFocus\n  }, others, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), loading && React.createElement(StyledLoading, {\n    size: \"xxs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), isOpenSearchResult && React.createElement(SearchResult, {\n    users: users,\n    forMessage: forMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }));\n};\n\nSearch.propTypes = {\n  location: PropTypes.object.isRequired,\n  hideIcon: PropTypes.bool,\n  forMessage: PropTypes.bool,\n  backgroundColor: PropTypes.string,\n  placeholder: PropTypes.string,\n  autoFocus: PropTypes.bool\n};\nexport default Search;","map":{"version":3,"sources":["/Users/niruhan/MSc/source_code/lang-exchange-lk/frontend/src/components/Search/Search.js"],"names":["React","useState","useEffect","useRef","useApolloClient","PropTypes","styled","Loading","SearchInput","SearchResult","useClickOutside","useDebounce","SEARCH_USERS","StyledLoading","Search","location","hideIcon","forMessage","backgroundColor","placeholder","autoFocus","others","client","isOpenSearchResult","setIsOpenSearchResult","searchQuery","setSearchQuery","users","setUsers","loading","setLoading","inputRef","debounceSearchQuery","pathname","search","query","variables","data","searchUsers","openSearchResult","handleInputChange","e","value","target","replace","handleInputFocus","propTypes","object","isRequired","bool","string"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useApolloClient } from '@apollo/react-hooks';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { Loading } from 'components/Loading';\nimport SearchInput from './SearchInput';\nimport SearchResult from './SearchResult';\n\nimport { useClickOutside } from 'hooks/useClickOutside';\nimport { useDebounce } from 'hooks/useDebounce';\n\nimport { SEARCH_USERS } from 'graphql/user';\n\nconst StyledLoading = styled(Loading)`\n  position: absolute;\n  top: 14px;\n  right: 16px;\n`;\n\n/**\n * Renders search input\n */\nconst Search = ({\n  location,\n  hideIcon,\n  forMessage,\n  backgroundColor,\n  placeholder,\n  autoFocus,\n  ...others\n}) => {\n  const client = useApolloClient();\n\n  const [isOpenSearchResult, setIsOpenSearchResult] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // Close search result on click outside\n  const inputRef = useRef(null);\n  useClickOutside(inputRef, () => setIsOpenSearchResult(false));\n\n  // Debounce search query value\n  const debounceSearchQuery = useDebounce(searchQuery, 500);\n\n  useEffect(() => {\n    // Clear search input value, after location change\n    setSearchQuery('');\n  }, [location.pathname]);\n\n  useEffect(() => {\n    const search = async () => {\n      const { data } = await client.query({\n        query: SEARCH_USERS,\n        variables: { searchQuery: debounceSearchQuery },\n      });\n\n      setUsers(data.searchUsers);\n      setLoading(false);\n\n      const openSearchResult = debounceSearchQuery !== '';\n      setIsOpenSearchResult(openSearchResult);\n    };\n\n    debounceSearchQuery ? search() : setIsOpenSearchResult(false);\n\n    return () => setLoading(false);\n  }, [debounceSearchQuery, client]);\n\n  const handleInputChange = async e => {\n    // Trim white space only from beginning\n    const value = e.target.value.replace(/^\\s+/g, '');\n    setSearchQuery(value);\n    if (value) {\n      setLoading(true);\n    }\n  };\n\n  const handleInputFocus = () => searchQuery && setIsOpenSearchResult(true);\n\n  return (\n    <SearchInput\n      onChange={handleInputChange}\n      onFocus={handleInputFocus}\n      value={searchQuery}\n      inputRef={inputRef}\n      placeholder={placeholder}\n      hideIcon={hideIcon}\n      backgroundColor={backgroundColor}\n      autoFocus={autoFocus}\n      {...others}\n    >\n      {loading && <StyledLoading size=\"xxs\" />}\n\n      {isOpenSearchResult && (\n        <SearchResult users={users} forMessage={forMessage} />\n      )}\n    </SearchInput>\n  );\n};\n\nSearch.propTypes = {\n  location: PropTypes.object.isRequired,\n  hideIcon: PropTypes.bool,\n  forMessage: PropTypes.bool,\n  backgroundColor: PropTypes.string,\n  placeholder: PropTypes.string,\n  autoFocus: PropTypes.bool,\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}