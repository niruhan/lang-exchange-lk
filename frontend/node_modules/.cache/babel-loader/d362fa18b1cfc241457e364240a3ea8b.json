{"ast":null,"code":"import _slicedToArray from \"/Users/niruhan/MSc/source_code/lang-exchange-lk/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/niruhan/MSc/source_code/lang-exchange-lk/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/niruhan/MSc/source_code/lang-exchange-lk/frontend/src/pages/Messages/MessagesChatConversation.js\";\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteral([\"\\n  margin-left: \", \";\\n  align-self: center;\\n\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"\\n  height: 38px;\\n  border-radius: \", \";\\n  background-color: \", \";\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n  background-color: \", \";\\n  position: sticky;\\n  bottom: 0;\\n  width: 100%;\\n  display: flex;\\n  padding: \", \";\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: row;\\n  position: relative;\\n  max-width: 300px;\\n  line-height: 21px;\\n  font-size: \", \";\\n  padding: \", \" \", \";\\n  border-radius: \", \";\\n  color: \", \";\\n  background-color: \", \";\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  position: relative;\\n  justify-content: \", \";\\n  margin: \", \" 0;\\n\\n  &:hover \", \" {\\n    display: block;\\n  }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  bottom: -\", \";\\n  left: \", \";\\n  right: -\", \";\\n  display: none;\\n  font-size: \", \";\\n  color: \", \";\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  flex: 1;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: 0 \", \";\\n  overflow-y: auto;\\n  height: 100vh;\\n  margin-top: -120px;\\n  padding-top: 120px;\\n  display: flex;\\n  flex-direction: column;\\n\\n  ::-webkit-scrollbar {\\n    width: 8px;\\n  }\\n\\n  ::-webkit-scrollbar-thumb {\\n    background-color: \", \";\\n    border-radius: \", \";\\n    visibility: hidden;\\n\\n    &:hover {\\n      background-color: \", \";\\n    }\\n  }\\n\\n  &:hover {\\n    ::-webkit-scrollbar-thumb {\\n      visibility: visible;\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { useMutation } from '@apollo/react-hooks';\nimport { Button, Textarea } from 'components/Form';\nimport { SendIcon } from 'components/icons';\nimport Avatar from 'components/Avatar';\nimport { Spacing } from 'components/Layout';\nimport { CREATE_MESSAGE } from 'graphql/messages';\nimport { GET_CONVERSATIONS } from 'graphql/user';\nimport { currentDate } from 'utils/date';\nimport * as Routes from 'routes';\nvar Root = styled.div(_templateObject(), function (p) {\n  return p.theme.spacing.sm;\n}, function (p) {\n  return p.theme.colors.grey[500];\n}, function (p) {\n  return p.theme.radius.lg;\n}, function (p) {\n  return p.theme.colors.grey[600];\n});\nvar Conversation = styled.div(_templateObject2());\nvar MessageDate = styled.span(_templateObject3(), function (p) {\n  return p.theme.spacing.sm;\n}, function (p) {\n  return !p.userMessage && p.theme.spacing.lg;\n}, function (p) {\n  return p.userMessage && 0;\n}, function (p) {\n  return p.theme.font.size.tiny;\n}, function (p) {\n  return p.theme.colors.text.secondary;\n});\nvar MessageWrapper = styled.div(_templateObject4(), function (p) {\n  return p.userMessage && 'flex-end';\n}, function (p) {\n  return p.theme.spacing.md;\n}, MessageDate);\nvar Message = styled.div(_templateObject5(), function (p) {\n  return p.theme.font.size.xs;\n}, function (p) {\n  return p.theme.spacing.xxs;\n}, function (p) {\n  return p.theme.spacing.xs;\n}, function (p) {\n  return p.theme.radius.lg;\n}, function (p) {\n  return p.userMessage && p.theme.colors.white;\n}, function (p) {\n  return p.userMessage ? p.theme.colors.primary.light : p.theme.colors.grey[200];\n});\nvar Form = styled.form(_templateObject6(), function (p) {\n  return p.theme.colors.white;\n}, function (p) {\n  return p.theme.spacing.xxs;\n});\nvar StyledTextarea = styled(Textarea)(_templateObject7(), function (p) {\n  return p.theme.radius.lg;\n}, function (p) {\n  return p.theme.colors.grey[200];\n});\nvar SendButton = styled(Button)(_templateObject8(), function (p) {\n  return p.theme.spacing.sm;\n});\n/**\n * Component that renders messages conversations UI\n */\n\nvar MessagesChatConversation = function MessagesChatConversation(_ref) {\n  var messages = _ref.messages,\n      authUser = _ref.authUser,\n      chatUser = _ref.chatUser,\n      data = _ref.data,\n      match = _ref.match;\n  var bottomRef = useRef(null);\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      messageText = _useState2[0],\n      setMessageText = _useState2[1];\n\n  var _useMutation = useMutation(CREATE_MESSAGE),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      createMessage = _useMutation2[0];\n\n  useEffect(function () {\n    if (bottomRef.current) {\n      bottomRef.current.scrollIntoView();\n    }\n  }, [bottomRef, data]);\n\n  var sendMessage = function sendMessage(e) {\n    e.preventDefault();\n    if (!messageText) return;\n    setMessageText('');\n    createMessage({\n      variables: {\n        input: {\n          sender: authUser.id,\n          receiver: chatUser ? chatUser.id : null,\n          message: messageText\n        }\n      },\n      refetchQueries: function refetchQueries(_ref2) {\n        var data = _ref2.data;\n\n        if (data && data.createMessage && data.createMessage.isFirstMessage) {\n          return [{\n            query: GET_CONVERSATIONS,\n            variables: {\n              authUserId: authUser.id\n            }\n          }];\n        }\n      }\n    });\n  };\n\n  var onEnterPress = function onEnterPress(e) {\n    if (e.keyCode === 13 && e.shiftKey === false) {\n      sendMessage(e);\n    }\n  };\n\n  return React.createElement(Root, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(Conversation, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, messages.map(function (message) {\n    var isAuthUserReceiver = authUser.id === message.sender.id;\n    return React.createElement(MessageWrapper, {\n      userMessage: isAuthUserReceiver,\n      key: message.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, !isAuthUserReceiver && React.createElement(Spacing, {\n      right: \"xs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      image: message.sender.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    })), React.createElement(Message, {\n      userMessage: isAuthUserReceiver,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, message.message), React.createElement(MessageDate, {\n      userMessage: isAuthUserReceiver,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, currentDate(message.createdAt)));\n  }), React.createElement(\"div\", {\n    ref: bottomRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  })), match.params.userId !== Routes.NEW_ID_VALUE && chatUser && React.createElement(Form, {\n    onSubmit: sendMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, React.createElement(StyledTextarea, {\n    placeholder: \"Type a message\",\n    value: messageText,\n    onChange: function onChange(e) {\n      return setMessageText(e.target.value);\n    },\n    onKeyDown: onEnterPress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }), React.createElement(SendButton, {\n    type: \"submit\",\n    ghost: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, React.createElement(SendIcon, {\n    width: \"28\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }))));\n};\n\nMessagesChatConversation.propTypes = {\n  messages: PropTypes.array.isRequired,\n  authUser: PropTypes.object.isRequired,\n  chatUser: PropTypes.object,\n  data: PropTypes.any,\n  match: PropTypes.object.isRequired\n};\nexport default MessagesChatConversation;","map":{"version":3,"sources":["/Users/niruhan/MSc/source_code/lang-exchange-lk/frontend/src/pages/Messages/MessagesChatConversation.js"],"names":["React","useState","useRef","useEffect","styled","PropTypes","useMutation","Button","Textarea","SendIcon","Avatar","Spacing","CREATE_MESSAGE","GET_CONVERSATIONS","currentDate","Routes","Root","div","p","theme","spacing","sm","colors","grey","radius","lg","Conversation","MessageDate","span","userMessage","font","size","tiny","text","secondary","MessageWrapper","md","Message","xs","xxs","white","primary","light","Form","form","StyledTextarea","SendButton","MessagesChatConversation","messages","authUser","chatUser","data","match","bottomRef","messageText","setMessageText","createMessage","current","scrollIntoView","sendMessage","e","preventDefault","variables","input","sender","id","receiver","message","refetchQueries","isFirstMessage","query","authUserId","onEnterPress","keyCode","shiftKey","map","isAuthUserReceiver","image","createdAt","params","userId","NEW_ID_VALUE","target","value","propTypes","array","isRequired","object","any"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { useMutation } from '@apollo/react-hooks';\n\nimport { Button, Textarea } from 'components/Form';\nimport { SendIcon } from 'components/icons';\nimport Avatar from 'components/Avatar';\nimport { Spacing } from 'components/Layout';\n\nimport { CREATE_MESSAGE } from 'graphql/messages';\nimport { GET_CONVERSATIONS } from 'graphql/user';\n\nimport { currentDate } from 'utils/date';\n\nimport * as Routes from 'routes';\n\nconst Root = styled.div`\n  padding: 0 ${p => p.theme.spacing.sm};\n  overflow-y: auto;\n  height: 100vh;\n  margin-top: -120px;\n  padding-top: 120px;\n  display: flex;\n  flex-direction: column;\n\n  ::-webkit-scrollbar {\n    width: 8px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background-color: ${p => p.theme.colors.grey[500]};\n    border-radius: ${p => p.theme.radius.lg};\n    visibility: hidden;\n\n    &:hover {\n      background-color: ${p => p.theme.colors.grey[600]};\n    }\n  }\n\n  &:hover {\n    ::-webkit-scrollbar-thumb {\n      visibility: visible;\n    }\n  }\n`;\n\nconst Conversation = styled.div`\n  flex: 1;\n`;\n\nconst MessageDate = styled.span`\n  position: absolute;\n  bottom: -${p => p.theme.spacing.sm};\n  left: ${p => !p.userMessage && p.theme.spacing.lg};\n  right: -${p => p.userMessage && 0};\n  display: none;\n  font-size: ${p => p.theme.font.size.tiny};\n  color: ${p => p.theme.colors.text.secondary};\n`;\n\nconst MessageWrapper = styled.div`\n  display: flex;\n  position: relative;\n  justify-content: ${p => p.userMessage && 'flex-end'};\n  margin: ${p => p.theme.spacing.md} 0;\n\n  &:hover ${MessageDate} {\n    display: block;\n  }\n`;\n\nconst Message = styled.div`\n  display: flex;\n  flex-direction: row;\n  position: relative;\n  max-width: 300px;\n  line-height: 21px;\n  font-size: ${p => p.theme.font.size.xs};\n  padding: ${p => p.theme.spacing.xxs} ${p => p.theme.spacing.xs};\n  border-radius: ${p => p.theme.radius.lg};\n  color: ${p => p.userMessage && p.theme.colors.white};\n  background-color: ${p =>\n    p.userMessage ? p.theme.colors.primary.light : p.theme.colors.grey[200]};\n`;\n\nconst Form = styled.form`\n  background-color: ${p => p.theme.colors.white};\n  position: sticky;\n  bottom: 0;\n  width: 100%;\n  display: flex;\n  padding: ${p => p.theme.spacing.xxs};\n`;\n\nconst StyledTextarea = styled(Textarea)`\n  height: 38px;\n  border-radius: ${p => p.theme.radius.lg};\n  background-color: ${p => p.theme.colors.grey[200]};\n`;\n\nconst SendButton = styled(Button)`\n  margin-left: ${p => p.theme.spacing.sm};\n  align-self: center;\n`;\n\n/**\n * Component that renders messages conversations UI\n */\nconst MessagesChatConversation = ({\n  messages,\n  authUser,\n  chatUser,\n  data,\n  match,\n}) => {\n  const bottomRef = useRef(null);\n\n  const [messageText, setMessageText] = useState('');\n\n  const [createMessage] = useMutation(CREATE_MESSAGE);\n\n  useEffect(() => {\n    if (bottomRef.current) {\n      bottomRef.current.scrollIntoView();\n    }\n  }, [bottomRef, data]);\n\n  const sendMessage = e => {\n    e.preventDefault();\n\n    if (!messageText) return;\n\n    setMessageText('');\n    createMessage({\n      variables: {\n        input: {\n          sender: authUser.id,\n          receiver: chatUser ? chatUser.id : null,\n          message: messageText,\n        },\n      },\n      refetchQueries: ({ data }) => {\n        if (data && data.createMessage && data.createMessage.isFirstMessage) {\n          return [\n            {\n              query: GET_CONVERSATIONS,\n              variables: { authUserId: authUser.id },\n            },\n          ];\n        }\n      },\n    });\n  };\n\n  const onEnterPress = e => {\n    if (e.keyCode === 13 && e.shiftKey === false) {\n      sendMessage(e);\n    }\n  };\n\n  return (\n    <Root>\n      <Conversation>\n        {messages.map(message => {\n          const isAuthUserReceiver = authUser.id === message.sender.id;\n\n          return (\n            <MessageWrapper userMessage={isAuthUserReceiver} key={message.id}>\n              {!isAuthUserReceiver && (\n                <Spacing right=\"xs\">\n                  <Avatar image={message.sender.image} />\n                </Spacing>\n              )}\n\n              <Message userMessage={isAuthUserReceiver}>\n                {message.message}\n              </Message>\n\n              <MessageDate userMessage={isAuthUserReceiver}>\n                {currentDate(message.createdAt)}\n              </MessageDate>\n            </MessageWrapper>\n          );\n        })}\n        <div ref={bottomRef} />\n      </Conversation>\n\n      {match.params.userId !== Routes.NEW_ID_VALUE && chatUser && (\n        <Form onSubmit={sendMessage}>\n          <StyledTextarea\n            placeholder=\"Type a message\"\n            value={messageText}\n            onChange={e => setMessageText(e.target.value)}\n            onKeyDown={onEnterPress}\n          />\n\n          <SendButton type=\"submit\" ghost>\n            <SendIcon width=\"28\" />\n          </SendButton>\n        </Form>\n      )}\n    </Root>\n  );\n};\n\nMessagesChatConversation.propTypes = {\n  messages: PropTypes.array.isRequired,\n  authUser: PropTypes.object.isRequired,\n  chatUser: PropTypes.object,\n  data: PropTypes.any,\n  match: PropTypes.object.isRequired,\n};\n\nexport default MessagesChatConversation;\n"]},"metadata":{},"sourceType":"module"}