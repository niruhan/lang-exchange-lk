{"ast":null,"code":"import _regeneratorRuntime from \"/Users/niruhan/MSc/source_code/lang-exchange-lk/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/niruhan/MSc/source_code/lang-exchange-lk/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/niruhan/MSc/source_code/lang-exchange-lk/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/niruhan/MSc/source_code/lang-exchange-lk/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/niruhan/MSc/source_code/lang-exchange-lk/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/niruhan/MSc/source_code/lang-exchange-lk/frontend/src/pages/Auth/ResetPassword.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  margin: 0 auto;\\n  background-color: \", \";\\n  padding: \", \";\\n  border-radius: \", \";\\n  margin-top: 80px;\\n\\n  @media (min-width: \", \") {\\n    width: 450px;\\n  }\\n\\n  @media (min-width: \", \") {\\n    margin-top: auto;\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: 0 \", \";\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Query, Mutation } from 'react-apollo';\nimport { Spacing } from 'components/Layout';\nimport { H1, Error } from 'components/Text';\nimport { Loading } from 'components/Loading';\nimport { InputText, Button } from 'components/Form';\nimport Head from 'components/Head';\nimport { VERIFY_RESET_PASSWORD_TOKEN, RESET_PASSWORD } from 'graphql/user';\nimport * as Routes from 'routes';\nvar Root = styled.div(_templateObject(), function (p) {\n  return p.theme.spacing.sm;\n});\nvar Container = styled.div(_templateObject2(), function (p) {\n  return p.theme.colors.white;\n}, function (p) {\n  return p.theme.spacing.md;\n}, function (p) {\n  return p.theme.radius.sm;\n}, function (p) {\n  return p.theme.screen.sm;\n}, function (p) {\n  return p.theme.screen.md;\n});\n/**\n * Reset password page\n */\n\nvar ResetPassword = function ResetPassword(_ref) {\n  var history = _ref.history,\n      location = _ref.location,\n      refetch = _ref.refetch;\n\n  var _useState = useState({\n    password: '',\n    confirmPassword: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      values = _useState2[0],\n      setValues = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var handleChange = function handleChange(e) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n    setValues(_objectSpread({}, values, _defineProperty({}, name, value)));\n  };\n\n  var handleSubmit = function handleSubmit(e, resetPassword) {\n    e.preventDefault();\n\n    if (!password || !confirmPassword) {\n      setError('Enter password and Confirm password.');\n      return;\n    } else if (password.length < 6) {\n      setError('Password min 6 characters');\n      return;\n    } else if (password !== confirmPassword) {\n      setError(\"Passwords don't match.\");\n      return;\n    }\n\n    setError('');\n    resetPassword().then(\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref2) {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                data = _ref2.data;\n                localStorage.setItem('token', data.resetPassword.token);\n                _context.next = 4;\n                return refetch();\n\n              case 4:\n                history.push(Routes.HOME);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref3.apply(this, arguments);\n      };\n    }()).catch(function (err) {\n      setError(err);\n    });\n  };\n\n  var password = values.password,\n      confirmPassword = values.confirmPassword;\n  var url = new URLSearchParams(location.search);\n  var email = url.get('email');\n  var token = url.get('token');\n  return React.createElement(Root, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(Head, {\n    title: \"Reset Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Query, {\n    query: VERIFY_RESET_PASSWORD_TOKEN,\n    variables: {\n      email: email,\n      token: token\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, function (_ref4) {\n    var loading = _ref4.loading,\n        apiError = _ref4.error;\n    if (loading) return React.createElement(Loading, {\n      top: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    });\n    if (apiError) return React.createElement(H1, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"This token is either invalid or expired!\");\n    return React.createElement(Mutation, {\n      mutation: RESET_PASSWORD,\n      variables: {\n        input: {\n          email: email,\n          password: password,\n          token: token\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, function (resetPassword, _ref5) {\n      var loading = _ref5.loading,\n          apiError = _ref5.error;\n      if (apiError) return React.createElement(H1, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, apiError);\n      return React.createElement(React.Fragment, null, React.createElement(Spacing, {\n        bottom: \"md\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(H1, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Password Reset\")), React.createElement(\"form\", {\n        onSubmit: function onSubmit(e) {\n          return handleSubmit(e, resetPassword);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(InputText, {\n        type: \"password\",\n        name: \"password\",\n        values: password,\n        onChange: handleChange,\n        placeholder: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), React.createElement(Spacing, {\n        top: \"xs\",\n        bottom: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(InputText, {\n        type: \"password\",\n        name: \"confirmPassword\",\n        values: confirmPassword,\n        onChange: handleChange,\n        placeholder: \"Confirm Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      })), error && React.createElement(Spacing, {\n        bottom: \"sm\",\n        top: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Error, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, error)), React.createElement(Button, {\n        disabled: loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Reset Password\")));\n    });\n  })));\n};\n\nResetPassword.propTypes = {\n  location: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  refetch: PropTypes.func.isRequired\n};\nexport default withRouter(ResetPassword);","map":{"version":3,"sources":["/Users/niruhan/MSc/source_code/lang-exchange-lk/frontend/src/pages/Auth/ResetPassword.js"],"names":["React","useState","styled","PropTypes","withRouter","Query","Mutation","Spacing","H1","Error","Loading","InputText","Button","Head","VERIFY_RESET_PASSWORD_TOKEN","RESET_PASSWORD","Routes","Root","div","p","theme","spacing","sm","Container","colors","white","md","radius","screen","ResetPassword","history","location","refetch","password","confirmPassword","values","setValues","error","setError","handleChange","e","target","name","value","handleSubmit","resetPassword","preventDefault","length","then","data","localStorage","setItem","token","push","HOME","catch","err","url","URLSearchParams","search","email","get","loading","apiError","input","propTypes","object","isRequired","func"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Query, Mutation } from 'react-apollo';\n\nimport { Spacing } from 'components/Layout';\nimport { H1, Error } from 'components/Text';\nimport { Loading } from 'components/Loading';\nimport { InputText, Button } from 'components/Form';\nimport Head from 'components/Head';\n\nimport { VERIFY_RESET_PASSWORD_TOKEN, RESET_PASSWORD } from 'graphql/user';\n\nimport * as Routes from 'routes';\n\nconst Root = styled.div`\n  padding: 0 ${p => p.theme.spacing.sm};\n`;\n\nconst Container = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  background-color: ${p => p.theme.colors.white};\n  padding: ${p => p.theme.spacing.md};\n  border-radius: ${p => p.theme.radius.sm};\n  margin-top: 80px;\n\n  @media (min-width: ${p => p.theme.screen.sm}) {\n    width: 450px;\n  }\n\n  @media (min-width: ${p => p.theme.screen.md}) {\n    margin-top: auto;\n  }\n`;\n\n/**\n * Reset password page\n */\nconst ResetPassword = ({ history, location, refetch }) => {\n  const [values, setValues] = useState({ password: '', confirmPassword: '' });\n  const [error, setError] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setValues({ ...values, [name]: value });\n  };\n\n  const handleSubmit = (e, resetPassword) => {\n    e.preventDefault();\n\n    if (!password || !confirmPassword) {\n      setError('Enter password and Confirm password.');\n      return;\n    } else if (password.length < 6) {\n      setError('Password min 6 characters');\n      return;\n    } else if (password !== confirmPassword) {\n      setError(\"Passwords don't match.\");\n      return;\n    }\n\n    setError('');\n    resetPassword()\n      .then(async ({ data }) => {\n        localStorage.setItem('token', data.resetPassword.token);\n        await refetch();\n        history.push(Routes.HOME);\n      })\n      .catch(err => {\n        setError(err);\n      });\n  };\n\n  const { password, confirmPassword } = values;\n\n  const url = new URLSearchParams(location.search);\n  const email = url.get('email');\n  const token = url.get('token');\n\n  return (\n    <Root>\n      <Head title=\"Reset Password\" />\n\n      <Container>\n        <Query query={VERIFY_RESET_PASSWORD_TOKEN} variables={{ email, token }}>\n          {({ loading, error: apiError }) => {\n            if (loading) return <Loading top=\"lg\" />;\n            if (apiError)\n              return <H1>This token is either invalid or expired!</H1>;\n\n            return (\n              <Mutation\n                mutation={RESET_PASSWORD}\n                variables={{ input: { email, password, token } }}\n              >\n                {(resetPassword, { loading, error: apiError }) => {\n                  if (apiError) return <H1>{apiError}</H1>;\n\n                  return (\n                    <>\n                      <Spacing bottom=\"md\">\n                        <H1>Password Reset</H1>\n                      </Spacing>\n\n                      <form onSubmit={e => handleSubmit(e, resetPassword)}>\n                        <InputText\n                          type=\"password\"\n                          name=\"password\"\n                          values={password}\n                          onChange={handleChange}\n                          placeholder=\"Password\"\n                        />\n\n                        <Spacing top=\"xs\" bottom=\"sm\">\n                          <InputText\n                            type=\"password\"\n                            name=\"confirmPassword\"\n                            values={confirmPassword}\n                            onChange={handleChange}\n                            placeholder=\"Confirm Password\"\n                          />\n                        </Spacing>\n\n                        {error && (\n                          <Spacing bottom=\"sm\" top=\"sm\">\n                            <Error>{error}</Error>\n                          </Spacing>\n                        )}\n\n                        <Button disabled={loading}>Reset Password</Button>\n                      </form>\n                    </>\n                  );\n                }}\n              </Mutation>\n            );\n          }}\n        </Query>\n      </Container>\n    </Root>\n  );\n};\n\nResetPassword.propTypes = {\n  location: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  refetch: PropTypes.func.isRequired,\n};\n\nexport default withRouter(ResetPassword);\n"]},"metadata":{},"sourceType":"module"}