{"ast":null,"code":"import _slicedToArray from \"/Users/niruhan/MSc/source_code/lang-exchange-lk/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/niruhan/MSc/source_code/lang-exchange-lk/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/niruhan/MSc/source_code/lang-exchange-lk/frontend/src/pages/Home/Home.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  text-decoration: underline;\\n  font-weight: \", \";\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: \", \";\\n  border: 1px solid \", \";\\n  border-radius: \", \";\\n  margin-top: \", \";\\n  background-color: \", \";\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, Fragment } from 'react';\nimport styled from 'styled-components';\nimport { generatePath } from 'react-router-dom';\nimport { Query } from 'react-apollo';\nimport { A } from 'components/Text';\nimport PostPopup from 'components/PostPopup';\nimport Modal from 'components/Modal';\nimport PostCard from 'components/PostCard';\nimport { Spacing, Container } from 'components/Layout';\nimport { Loading } from 'components/Loading';\nimport InfiniteScroll from 'components/InfiniteScroll';\nimport Skeleton from 'components/Skeleton';\nimport CreatePost from 'components/CreatePost';\nimport Head from 'components/Head';\nimport { GET_FOLLOWED_POSTS } from 'graphql/post';\nimport { useStore } from 'store';\nimport { HOME_PAGE_POSTS_LIMIT } from 'constants/DataLimit';\nimport * as Routes from 'routes';\nvar Empty = styled.div(_templateObject(), function (p) {\n  return p.theme.spacing.sm;\n}, function (p) {\n  return p.theme.colors.border.main;\n}, function (p) {\n  return p.theme.radius.sm;\n}, function (p) {\n  return p.theme.spacing.lg;\n}, function (p) {\n  return p.theme.colors.white;\n});\nvar StyledA = styled(A)(_templateObject2(), function (p) {\n  return p.theme.font.weight.bold;\n});\n/**\n * Home page of the app\n */\n\nvar Home = function Home() {\n  var _useStore = useStore(),\n      _useStore2 = _slicedToArray(_useStore, 1),\n      auth = _useStore2[0].auth;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalPostId = _useState2[0],\n      setModalPostId = _useState2[1];\n\n  var closeModal = function closeModal() {\n    window.history.pushState('', '', '/');\n    setModalPostId(null);\n  };\n\n  var _openModal = function openModal(postId) {\n    window.history.pushState('', '', generatePath(Routes.POST, {\n      id: postId\n    }));\n    setModalPostId(postId);\n  };\n\n  var variables = {\n    userId: auth.user.id,\n    skip: 0,\n    limit: HOME_PAGE_POSTS_LIMIT\n  };\n  return React.createElement(Container, {\n    maxWidth: \"sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(Spacing, {\n    top: \"lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(CreatePost, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(Query, {\n    query: GET_FOLLOWED_POSTS,\n    variables: variables,\n    notifyOnNetworkStatusChange: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, function (_ref) {\n    var data = _ref.data,\n        loading = _ref.loading,\n        fetchMore = _ref.fetchMore,\n        networkStatus = _ref.networkStatus;\n\n    if (loading && networkStatus === 1) {\n      return React.createElement(Skeleton, {\n        height: 500,\n        bottom: \"lg\",\n        top: \"lg\",\n        count: HOME_PAGE_POSTS_LIMIT,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      });\n    }\n\n    var _data$getFollowedPost = data.getFollowedPosts,\n        posts = _data$getFollowedPost.posts,\n        count = _data$getFollowedPost.count;\n\n    if (!posts.length) {\n      return React.createElement(Empty, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(StyledA, {\n        to: generatePath(Routes.EXPLORE),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Explore new posts\"), ' ', \"or\", ' ', React.createElement(StyledA, {\n        to: generatePath(Routes.PEOPLE),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Find new people\"));\n    }\n\n    return React.createElement(InfiniteScroll, {\n      data: posts,\n      dataKey: \"getFollowedPosts.posts\",\n      count: parseInt(count),\n      variables: variables,\n      fetchMore: fetchMore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, function (data) {\n      var showNextLoading = loading && networkStatus === 3 && count !== data.length;\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, data.map(function (post) {\n        return React.createElement(Fragment, {\n          key: post.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, React.createElement(Modal, {\n          open: modalPostId === post.id,\n          onClose: closeModal,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, React.createElement(PostPopup, {\n          id: post.id,\n          closeModal: closeModal,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        })), React.createElement(Spacing, {\n          bottom: \"lg\",\n          top: \"lg\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, React.createElement(PostCard, {\n          author: post.author,\n          imagePublicId: post.imagePublicId,\n          postId: post.id,\n          comments: post.comments,\n          createdAt: post.createdAt,\n          title: post.title,\n          image: post.image,\n          likes: post.likes,\n          openModal: function openModal() {\n            return _openModal(post.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        })));\n      }), showNextLoading && React.createElement(Loading, {\n        top: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }));\n    });\n  }));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/niruhan/MSc/source_code/lang-exchange-lk/frontend/src/pages/Home/Home.js"],"names":["React","useState","Fragment","styled","generatePath","Query","A","PostPopup","Modal","PostCard","Spacing","Container","Loading","InfiniteScroll","Skeleton","CreatePost","Head","GET_FOLLOWED_POSTS","useStore","HOME_PAGE_POSTS_LIMIT","Routes","Empty","div","p","theme","spacing","sm","colors","border","main","radius","lg","white","StyledA","font","weight","bold","Home","auth","modalPostId","setModalPostId","closeModal","window","history","pushState","openModal","postId","POST","id","variables","userId","user","skip","limit","data","loading","fetchMore","networkStatus","getFollowedPosts","posts","count","length","EXPLORE","PEOPLE","parseInt","showNextLoading","map","post","author","imagePublicId","comments","createdAt","title","image","likes"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from 'react';\nimport styled from 'styled-components';\nimport { generatePath } from 'react-router-dom';\nimport { Query } from 'react-apollo';\n\nimport { A } from 'components/Text';\nimport PostPopup from 'components/PostPopup';\nimport Modal from 'components/Modal';\nimport PostCard from 'components/PostCard';\nimport { Spacing, Container } from 'components/Layout';\nimport { Loading } from 'components/Loading';\nimport InfiniteScroll from 'components/InfiniteScroll';\nimport Skeleton from 'components/Skeleton';\nimport CreatePost from 'components/CreatePost';\nimport Head from 'components/Head';\n\nimport { GET_FOLLOWED_POSTS } from 'graphql/post';\n\nimport { useStore } from 'store';\n\nimport { HOME_PAGE_POSTS_LIMIT } from 'constants/DataLimit';\n\nimport * as Routes from 'routes';\n\nconst Empty = styled.div`\n  padding: ${p => p.theme.spacing.sm};\n  border: 1px solid ${p => p.theme.colors.border.main};\n  border-radius: ${p => p.theme.radius.sm};\n  margin-top: ${p => p.theme.spacing.lg};\n  background-color: ${p => p.theme.colors.white};\n`;\n\nconst StyledA = styled(A)`\n  text-decoration: underline;\n  font-weight: ${p => p.theme.font.weight.bold};\n`;\n\n/**\n * Home page of the app\n */\nconst Home = () => {\n  const [{ auth }] = useStore();\n  const [modalPostId, setModalPostId] = useState(null);\n\n  const closeModal = () => {\n    window.history.pushState('', '', '/');\n    setModalPostId(null);\n  };\n\n  const openModal = postId => {\n    window.history.pushState('', '', generatePath(Routes.POST, { id: postId }));\n    setModalPostId(postId);\n  };\n\n  const variables = {\n    userId: auth.user.id,\n    skip: 0,\n    limit: HOME_PAGE_POSTS_LIMIT,\n  };\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Head />\n\n      <Spacing top=\"lg\" />\n\n      <CreatePost />\n\n      <Query\n        query={GET_FOLLOWED_POSTS}\n        variables={variables}\n        notifyOnNetworkStatusChange\n      >\n        {({ data, loading, fetchMore, networkStatus }) => {\n          if (loading && networkStatus === 1) {\n            return (\n              <Skeleton\n                height={500}\n                bottom=\"lg\"\n                top=\"lg\"\n                count={HOME_PAGE_POSTS_LIMIT}\n              />\n            );\n          }\n\n          const { posts, count } = data.getFollowedPosts;\n\n          if (!posts.length) {\n            return (\n              <Empty>\n                <StyledA to={generatePath(Routes.EXPLORE)}>\n                  Explore new posts\n                </StyledA>{' '}\n                or{' '}\n                <StyledA to={generatePath(Routes.PEOPLE)}>\n                  Find new people\n                </StyledA>\n              </Empty>\n            );\n          }\n\n          return (\n            <InfiniteScroll\n              data={posts}\n              dataKey=\"getFollowedPosts.posts\"\n              count={parseInt(count)}\n              variables={variables}\n              fetchMore={fetchMore}\n            >\n              {data => {\n                const showNextLoading =\n                  loading && networkStatus === 3 && count !== data.length;\n\n                return (\n                  <Fragment>\n                    {data.map(post => (\n                      <Fragment key={post.id}>\n                        <Modal\n                          open={modalPostId === post.id}\n                          onClose={closeModal}\n                        >\n                          <PostPopup id={post.id} closeModal={closeModal} />\n                        </Modal>\n\n                        <Spacing bottom=\"lg\" top=\"lg\">\n                          <PostCard\n                            author={post.author}\n                            imagePublicId={post.imagePublicId}\n                            postId={post.id}\n                            comments={post.comments}\n                            createdAt={post.createdAt}\n                            title={post.title}\n                            image={post.image}\n                            likes={post.likes}\n                            openModal={() => openModal(post.id)}\n                          />\n                        </Spacing>\n                      </Fragment>\n                    ))}\n\n                    {showNextLoading && <Loading top=\"lg\" />}\n                  </Fragment>\n                );\n              }}\n            </InfiniteScroll>\n          );\n        }}\n      </Query>\n    </Container>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}