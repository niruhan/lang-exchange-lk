{"ast":null,"code":"import _defineProperty from \"/Users/niruhan/MSc/source_code/lang-exchange-lk/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/niruhan/MSc/source_code/lang-exchange-lk/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/niruhan/MSc/source_code/lang-exchange-lk/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/niruhan/MSc/source_code/lang-exchange-lk/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/niruhan/MSc/source_code/lang-exchange-lk/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/niruhan/MSc/source_code/lang-exchange-lk/frontend/src/components/Like.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: \", \" 0;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Mutation } from 'react-apollo';\nimport { LikeIcon } from 'components/icons';\nimport { Spacing } from './Layout';\nimport { Button } from './Form';\nimport { GET_FOLLOWED_POSTS, GET_POSTS } from 'graphql/post';\nimport { GET_AUTH_USER } from 'graphql/user';\nimport { CREATE_LIKE, DELETE_LIKE } from 'graphql/like';\nimport { NotificationType } from 'constants/NotificationType';\nimport { useNotifications } from 'hooks/useNotifications';\nimport { useStore } from 'store';\nvar StyledButton = styled(Button)(_templateObject(), function (p) {\n  return p.theme.spacing.xs;\n});\n/**\n * Component for rendering Like button\n */\n\nvar Like = function Like(_ref) {\n  var postId = _ref.postId,\n      user = _ref.user,\n      likes = _ref.likes,\n      withText = _ref.withText,\n      fullWidth = _ref.fullWidth;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useStore = useStore(),\n      _useStore2 = _slicedToArray(_useStore, 1),\n      auth = _useStore2[0].auth;\n\n  var notification = useNotifications();\n  var hasLiked = likes.find(function (l) {\n    return l.user === auth.user.id && l.post === postId;\n  });\n\n  var handleButtonClick =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(mutate) {\n      var _ref3, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              _context.next = 3;\n              return mutate();\n\n            case 3:\n              _ref3 = _context.sent;\n              data = _ref3.data;\n\n              if (!(auth.user.id === user.id)) {\n                _context.next = 7;\n                break;\n              }\n\n              return _context.abrupt(\"return\", setLoading(false));\n\n            case 7:\n              _context.next = 9;\n              return notification.toggle({\n                user: user,\n                postId: postId,\n                hasDone: hasLiked,\n                notificationType: NotificationType.LIKE,\n                notificationTypeId: data.createLike ? data.createLike.id : null\n              });\n\n            case 9:\n              setLoading(false);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleButtonClick(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }(); // Detect which mutation to use\n\n\n  var operation = hasLiked ? 'delete' : 'create';\n  var options = {\n    create: {\n      mutation: CREATE_LIKE,\n      variables: {\n        postId: postId,\n        userId: auth.user.id\n      }\n    },\n    delete: {\n      mutation: DELETE_LIKE,\n      variables: {\n        id: hasLiked ? hasLiked.id : null\n      }\n    }\n  };\n  return React.createElement(Mutation, {\n    mutation: options[operation].mutation,\n    variables: {\n      input: _objectSpread({}, options[operation].variables)\n    },\n    refetchQueries: function refetchQueries() {\n      return [{\n        query: GET_AUTH_USER\n      }, {\n        query: GET_POSTS,\n        variables: {\n          authUserId: auth.user.id\n        }\n      }, {\n        query: GET_FOLLOWED_POSTS,\n        variables: {\n          userId: auth.user.id\n        }\n      }];\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, function (mutate) {\n    return React.createElement(StyledButton, {\n      fullWidth: fullWidth && fullWidth,\n      disabled: loading,\n      text: true,\n      onClick: function onClick() {\n        return handleButtonClick(mutate);\n      },\n      color: hasLiked && 'primary.main',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(LikeIcon, {\n      color: hasLiked && 'primary.main',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(Spacing, {\n      inline: true,\n      left: \"xxs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), withText && React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Like\"));\n  });\n};\n\nLike.propTypes = {\n  postId: PropTypes.string.isRequired,\n  user: PropTypes.object.isRequired,\n  likes: PropTypes.array,\n  withText: PropTypes.bool,\n  fullWidth: PropTypes.bool\n};\nexport default Like;","map":{"version":3,"sources":["/Users/niruhan/MSc/source_code/lang-exchange-lk/frontend/src/components/Like.js"],"names":["React","useState","PropTypes","styled","Mutation","LikeIcon","Spacing","Button","GET_FOLLOWED_POSTS","GET_POSTS","GET_AUTH_USER","CREATE_LIKE","DELETE_LIKE","NotificationType","useNotifications","useStore","StyledButton","p","theme","spacing","xs","Like","postId","user","likes","withText","fullWidth","loading","setLoading","auth","notification","hasLiked","find","l","id","post","handleButtonClick","mutate","data","toggle","hasDone","notificationType","LIKE","notificationTypeId","createLike","operation","options","create","mutation","variables","userId","delete","input","query","authUserId","propTypes","string","isRequired","object","array","bool"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Mutation } from 'react-apollo';\n\nimport { LikeIcon } from 'components/icons';\nimport { Spacing } from './Layout';\nimport { Button } from './Form';\n\nimport { GET_FOLLOWED_POSTS, GET_POSTS } from 'graphql/post';\nimport { GET_AUTH_USER } from 'graphql/user';\nimport { CREATE_LIKE, DELETE_LIKE } from 'graphql/like';\n\nimport { NotificationType } from 'constants/NotificationType';\n\nimport { useNotifications } from 'hooks/useNotifications';\n\nimport { useStore } from 'store';\n\nconst StyledButton = styled(Button)`\n  padding: ${p => p.theme.spacing.xs} 0;\n`;\n\n/**\n * Component for rendering Like button\n */\nconst Like = ({ postId, user, likes, withText, fullWidth }) => {\n  const [loading, setLoading] = useState(false);\n\n  const [{ auth }] = useStore();\n\n  const notification = useNotifications();\n\n  const hasLiked = likes.find(\n    l => l.user === auth.user.id && l.post === postId\n  );\n\n  const handleButtonClick = async mutate => {\n    setLoading(true);\n    const { data } = await mutate();\n\n    // Create or delete notification for like\n    if (auth.user.id === user.id) return setLoading(false);\n    await notification.toggle({\n      user,\n      postId,\n      hasDone: hasLiked,\n      notificationType: NotificationType.LIKE,\n      notificationTypeId: data.createLike ? data.createLike.id : null,\n    });\n    setLoading(false);\n  };\n\n  // Detect which mutation to use\n  const operation = hasLiked ? 'delete' : 'create';\n  const options = {\n    create: {\n      mutation: CREATE_LIKE,\n      variables: { postId, userId: auth.user.id },\n    },\n    delete: {\n      mutation: DELETE_LIKE,\n      variables: { id: hasLiked ? hasLiked.id : null },\n    },\n  };\n\n  return (\n    <Mutation\n      mutation={options[operation].mutation}\n      variables={{ input: { ...options[operation].variables } }}\n      refetchQueries={() => [\n        { query: GET_AUTH_USER },\n        { query: GET_POSTS, variables: { authUserId: auth.user.id } },\n        { query: GET_FOLLOWED_POSTS, variables: { userId: auth.user.id } },\n      ]}\n    >\n      {mutate => {\n        return (\n          <StyledButton\n            fullWidth={fullWidth && fullWidth}\n            disabled={loading}\n            text\n            onClick={() => handleButtonClick(mutate)}\n            color={hasLiked && 'primary.main'}\n          >\n            <LikeIcon color={hasLiked && 'primary.main'} />\n            <Spacing inline left=\"xxs\" />\n            {withText && <b>Like</b>}\n          </StyledButton>\n        );\n      }}\n    </Mutation>\n  );\n};\n\nLike.propTypes = {\n  postId: PropTypes.string.isRequired,\n  user: PropTypes.object.isRequired,\n  likes: PropTypes.array,\n  withText: PropTypes.bool,\n  fullWidth: PropTypes.bool,\n};\n\nexport default Like;\n"]},"metadata":{},"sourceType":"module"}