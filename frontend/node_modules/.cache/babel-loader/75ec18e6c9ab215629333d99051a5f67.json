{"ast":null,"code":"import _slicedToArray from \"/Users/niruhan/MSc/source_code/new/lang-exchange-lk/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/niruhan/MSc/source_code/new/lang-exchange-lk/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/niruhan/MSc/source_code/new/lang-exchange-lk/frontend/src/pages/Explore/ExploreCard.js\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 300px;\\n  background-repeat: no-repeat;\\n  background-size: cover;\\n  background-position: center;\\n  background-color: \", \";\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  position: relative;\\n  cursor: pointer;\\n  border-radius: \", \";\\n  overflow: hidden;\\n\\n  &:hover \", \" {\\n    opacity: 1;\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  width: 100%;\\n  height: 100%;\\n  top: 0;\\n  bottom: 0;\\n  opacity: 0;\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: center;\\n  align-items: center;\\n  transition: opacity 0.3s, visibility 0.3s;\\n  background-color: rgba(0, 0, 0, 0.3);\\n  color: \", \";\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Spacing } from 'components/Layout';\nimport { LikeIcon, PostCommentIcon } from 'components/icons';\nvar Overlay = styled.div(_templateObject(), function (p) {\n  return p.theme.colors.white;\n});\nvar Root = styled.div(_templateObject2(), function (p) {\n  return p.theme.radius.sm;\n}, Overlay);\nvar Photo = styled.div(_templateObject3(), function (p) {\n  return p.theme.colors.grey[300];\n});\n/**\n * Card component, meant to be used in Explore page\n */\n\nvar ExploreCard = function ExploreCard(_ref) {\n  var openPostPopup = _ref.openPostPopup,\n      image = _ref.image,\n      countLikes = _ref.countLikes,\n      countComments = _ref.countComments;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      imageLoaded = _useState2[0],\n      setImageLoaded = _useState2[1];\n\n  useEffect(function () {\n    var img = new Image();\n    img.src = image;\n\n    img.onload = function () {\n      setImageLoaded(true);\n    };\n\n    return function () {\n      img.onload = null;\n    };\n  }, [image]);\n  return React.createElement(Root, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Photo, {\n    style: imageLoaded ? {\n      backgroundImage: \"url(\".concat(image, \")\")\n    } : {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(Overlay, {\n    onClick: openPostPopup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(LikeIcon, {\n    color: \"white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(Spacing, {\n    left: \"xs\",\n    right: \"lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, countLikes), React.createElement(PostCommentIcon, {\n    color: \"white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(Spacing, {\n    left: \"xs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, countComments)));\n};\n\nExploreCard.propTypes = {\n  openPostPopup: PropTypes.func.isRequired,\n  image: PropTypes.string.isRequired,\n  countLikes: PropTypes.number.isRequired,\n  countComments: PropTypes.number.isRequired\n};\nexport default ExploreCard;","map":{"version":3,"sources":["/Users/niruhan/MSc/source_code/new/lang-exchange-lk/frontend/src/pages/Explore/ExploreCard.js"],"names":["React","useEffect","useState","PropTypes","styled","Spacing","LikeIcon","PostCommentIcon","Overlay","div","p","theme","colors","white","Root","radius","sm","Photo","grey","ExploreCard","openPostPopup","image","countLikes","countComments","imageLoaded","setImageLoaded","img","Image","src","onload","backgroundImage","propTypes","func","isRequired","string","number"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { Spacing } from 'components/Layout';\nimport { LikeIcon, PostCommentIcon } from 'components/icons';\n\nconst Overlay = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  bottom: 0;\n  opacity: 0;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  transition: opacity 0.3s, visibility 0.3s;\n  background-color: rgba(0, 0, 0, 0.3);\n  color: ${p => p.theme.colors.white};\n`;\n\nconst Root = styled.div`\n  width: 100%;\n  position: relative;\n  cursor: pointer;\n  border-radius: ${p => p.theme.radius.sm};\n  overflow: hidden;\n\n  &:hover ${Overlay} {\n    opacity: 1;\n  }\n`;\n\nconst Photo = styled.div`\n  width: 100%;\n  height: 300px;\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center;\n  background-color: ${p => p.theme.colors.grey[300]};\n`;\n\n/**\n * Card component, meant to be used in Explore page\n */\nconst ExploreCard = ({ openPostPopup, image, countLikes, countComments }) => {\n  const [imageLoaded, setImageLoaded] = useState(false);\n\n  useEffect(() => {\n    const img = new Image();\n    img.src = image;\n\n    img.onload = () => {\n      setImageLoaded(true);\n    };\n\n    return () => {\n      img.onload = null;\n    };\n  }, [image]);\n\n  return (\n    <Root>\n      <Photo style={imageLoaded ? { backgroundImage: `url(${image})` } : {}} />\n\n      <Overlay onClick={openPostPopup}>\n        <LikeIcon color=\"white\" />\n\n        <Spacing left=\"xs\" right=\"lg\">\n          {countLikes}\n        </Spacing>\n\n        <PostCommentIcon color=\"white\" />\n\n        <Spacing left=\"xs\">{countComments}</Spacing>\n      </Overlay>\n    </Root>\n  );\n};\n\nExploreCard.propTypes = {\n  openPostPopup: PropTypes.func.isRequired,\n  image: PropTypes.string.isRequired,\n  countLikes: PropTypes.number.isRequired,\n  countComments: PropTypes.number.isRequired,\n};\n\nexport default ExploreCard;\n"]},"metadata":{},"sourceType":"module"}