{"ast":null,"code":"import { useEffect } from 'react';\n/**\n * React hook that detects click outside an element\n *\n * @param {node} ref, element to detect click outside\n * @param {func} handler, function for invoking when click outside element is detected\n */\n\nexport var useClickOutside = function useClickOutside(ref, handler) {\n  useEffect(function () {\n    document.addEventListener('click', handleClickOutside, false);\n    return function () {\n      document.removeEventListener('click', handleClickOutside, false);\n    };\n  });\n\n  var handleClickOutside = function handleClickOutside(event) {\n    if (ref.current && !ref.current.contains(event.target)) {\n      handler();\n    }\n  };\n};","map":{"version":3,"sources":["/Users/niruhan/MSc/source_code/lang-exchange-lk/frontend/src/hooks/useClickOutside.js"],"names":["useEffect","useClickOutside","ref","handler","document","addEventListener","handleClickOutside","removeEventListener","event","current","contains","target"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AAEA;;;;;;;AAMA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,GAAD,EAAMC,OAAN,EAAkB;AAC/CH,EAAAA,SAAS,CAAC,YAAM;AACdI,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmCC,kBAAnC,EAAuD,KAAvD;AAEA,WAAO,YAAM;AACXF,MAAAA,QAAQ,CAACG,mBAAT,CAA6B,OAA7B,EAAsCD,kBAAtC,EAA0D,KAA1D;AACD,KAFD;AAGD,GANQ,CAAT;;AAQA,MAAMA,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAE,KAAK,EAAI;AAClC,QAAIN,GAAG,CAACO,OAAJ,IAAe,CAACP,GAAG,CAACO,OAAJ,CAAYC,QAAZ,CAAqBF,KAAK,CAACG,MAA3B,CAApB,EAAwD;AACtDR,MAAAA,OAAO;AACR;AACF,GAJD;AAKD,CAdM","sourcesContent":["import { useEffect } from 'react';\n\n/**\n * React hook that detects click outside an element\n *\n * @param {node} ref, element to detect click outside\n * @param {func} handler, function for invoking when click outside element is detected\n */\nexport const useClickOutside = (ref, handler) => {\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside, false);\n\n    return () => {\n      document.removeEventListener('click', handleClickOutside, false);\n    };\n  });\n\n  const handleClickOutside = event => {\n    if (ref.current && !ref.current.contains(event.target)) {\n      handler();\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}